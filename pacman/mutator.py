# mutator.py
from config import MUTATION_DENSITY_THRESHOLD, NOVELTY_SPIKE_THRESHOLD

def should_mutate(memory):
    if not memory:
        return False
    density = sum(item['weight'] for item in memory) / len(memory)
    novelty_spike = any(item['novelty'] > NOVELTY_SPIKE_THRESHOLD for item in memory)
    return density > MUTATION_DENSITY_THRESHOLD and novelty_spike

def generate_mutated_code(memory):
    mutation_id = hash(str(memory)) % 9999
    code = f'''
# ðŸ§¬ Mutation {mutation_id}
# Auto-generated by MagicBox ASI

def fusion_logic(memory):
    return [item for item in memory if item.get("weight", 0) > 75]
'''
    return code, mutation_id

